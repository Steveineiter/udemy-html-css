* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  font-family: sans-serif;
  /* border: 2px solid black; let to unexpected behaviour if in 
    challenge 2 (with .container there still was a broder around body which makes sense*/
}

h2 {
  font-size: xx-large;
  text-align: center;
  text-transform: uppercase;
  background-color: rgba(204, 204, 204, 0.418);
}

strong {
  font-size: x-large;
}

a {
  color: black;
}

h3 {
  text-transform: uppercase;
}

ul {
  list-style-type: square;
}

button {
  font-size: x-large;
  text-transform: uppercase;
  color: white;
  background-color: black;
  border-width: 0px;
}

button:hover {
  color: black;
  background-color: white;
}

.free-shipping {
  font-size: small;
  font-weight: bold;
  text-transform: uppercase;
  color: #777;
}

a:hover {
  text-decoration: none;
}

/* ============== His solution differences ============ */
/* He mostly uses classes (never IDs), still went from top to bottom. I guess 
he does that so that we have more information (eg . product-title is better than using h2) */
body {
  line-height: 1.5;
}

/* ********** PRODUCT ********* */
.product {
  border: 4px solid black;
  padding: 10px;
}

.product-title {
  /* text-align: center; */
  font-size: 22px;
  /* text-transform: uppercase; */
  background-color: #f7f7f7;
}

/* ********** PRODUCT INFORMATION ********** */
.price {
  font-size: 24px;
}

.free-shipping {
  font-size: 12px;
}

/* Important, use link pseudoclass instead .more-info alone. This is best practice (LVHA!) */
.more-info:link,
.more-info:visited {
  color: black;
}

.more-info:hover,
more-info:active {
  /* text-decoration: none; */
}

/* ********** PRODUCT DETAILS ********** */
.details-title {
  font-size: 16px;
}

.details-list {
  /* list-style: square; */
}

/* ********** BUTTON ********** */

.add-to-cart {
  /* background-color: #000; */
  border: none;
  color: #fff;
  font-size: 20px;
  /* text-transform: uppercase; */
  cursor: pointer;
}

.add-to-cart:hover {
  color: #000;
  background-color: #fff;
}

/* ================================================================================= */
/* Challenge 2 */
* {
  padding: 0;
  margin: 0;
}

.container {
  width: 900px;
  margin: 0 auto;
}

.product {
  padding: 0px;
}

.free-shipping {
  margin-bottom: 20px;
}

.information {
  margin-bottom: 10px;
}

/* anchor is inline by default aka we cannot add a maring top/bottom. Therefore
its best practice to wrap it inside a <p> tag and style this one. */
/* .more-info:link,
.more-info:hover,
.more-info:link,
.more-info:visited {
  margin-bottom: 20px;
} */
.more-info-container {
  /* Not used anymore sine we changed display from inline */
  /* margin-bottom: 30px; */
}

.details-title {
  margin-bottom: 15px;
}

.details-list {
  margin-left: 50px;
}

li {
  margin-bottom: 15px;
}

li:last-child {
  margin-bottom: 10px;
}

.add-to-cart {
  width: 100%;
  height: 50px;
}
/* -------------------------------------------- */
/* His solution differences: */
/* He doesnt create a div this time but centers the article. */
.product {
  width: 825px;
  margin: 50px auto;
}

/* Padding because we want to have background color */
.product-title {
  padding: 15px;
}

.details-title {
  /* margin-top: 30px; he added this because we haven't learned
   why we cant add maring bottom to the anchor tag. */
}

/* TODO He used descentend selector like this, smarter as my direct solution! */
.details-list li {
  margin-bottom: 10px;
}

/* I forgot this one xD */
.add-to-cart:hover {
  border-top: 4px solid black;
}

/* ================================================================================= */
/* Challenge 2 */
/* Create a new p for sale, google how we can add spacing between chars.  */
/* Create an element (eg div) and create 6 more elements (again divs) and then give 
them color and put them side to side and use neat little trick as we used in boxes (mby inline blocks?)*/
.product {
  position: relative;
}

.sale {
  font-weight: bold;
  font-size: 14px;
  text-transform: uppercase;
  letter-spacing: 5px;
  background-color: red;
  color: white;
  padding: 6px 20px;

  position: absolute;
  top: -20px;
  left: -40px;
}

/* -------------------------------------------- */
/* His solution differences: */
.sale {
  background-color: #ec2f2f;
  font-size: 12px;
  /* Best practice: double horizontal than vertical padding. */
  padding: 7px 15px;
  /* This is best practice: */
  display: inline-block;
  /* This is an option but not ideal: */
  /* width: 40px;
  text-align: center; */

  top: -17px;
  left: -34px; /* Exactly double of top */

  letter-spacing: 2px;
}

.color {
  background-color: #000;
  height: 22px;
  width: 22px;
  /* we need inline block, because height width do not work on linline */
  display: inline-block;
  margin-right: 10px;
}

.color-blue {
  background-color: #2f6ee2;
}

.color-red {
  background-color: #ec2f2f;
}

.color-yellow {
  background-color: #f0bf1e;
}

.color-green {
  background-color: #90cc20;
}

.color-brown {
  background-color: #885214;
}

.more-info:link,
.more-info:visited {
  /* Better than wrapping the more information as i did. */
  margin-bottom: 30px;
  /* display: inline; wont work*/
  /* display: inline-block; This works as well tho:*/
  display: block;
}
/* ================================================================================= */
/* ============================== Float stuff ====================================== */
/* Create 3 containers picture, shipping, details. Aka create new divs. 
We want 40px of space between elements. Each should have 240px, if its too hard for us to calculate. */

/* .image-container {
  float: left;
  height: 250px;
  margin-right: 40px;
}

.shipping-container {
  float: left;
  width: 243px;
  margin-right: 40px;
}

.details-container {
  float: left;
  width: 243px;
}

.price {
  float: left;
}

.free-shipping {
  float: right;
}

.information {
  clear: both;
}

.details-list {
  margin-left: 10px;
} */

/* -------------------------------------------- */
/* His solution differences: */
/* Math for stuff: (825 (total) - 8 (border) - 250 (image size) 
- 80 (space between 3 containers, aka 2 used)) / 2 (only two containers left since image is on its own)
== 243   */
/* .shipping-container {
  padding-top: 20px;
} */
/* Also i changed in my code above from margin-left to margin right as he has.
This makes more sense since we read left to right i guess. */

/* We won't need manual align if we have flex boxes and further down the course. 
Also we dont have to do calulcations as above.  */
/* .free-shipping {
  margin-top: 8px;
}

.details-container {
  margin-top: 20px;
} */

/* ================================================================================= */
/* ============================== Flex-Box stuff ====================================== */
/* Remove inline for color boxes / use flex box. 
   Don't specify width of columns manually, flexbox should work for us.
   Rest should be as in previous challenge. */
.color {
  margin-right: 0;
}

.colors {
  display: flex;
  gap: 15px;
}

.details-list {
  margin-left: 10px;
}

.free-shipping {
  margin-bottom: 0;
}

/* .content-container {
  display: flex;
  gap: 40px;
  align-items: center;
} */

.text-container {
  display: flex;
  gap: 40px;
}

.price-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.shipping-container {
  flex: 70%;
}

/* -------------------------------------------- */
/* His solution differences: */
/* He set for product text and info flex to 1 which let to a nice solution, mine would look differently. */
/* .shipping-container {
  flex: 1;
}

.details-container {
  flex: 1;
} */

/* ================================================================================= */
/* ============================== CSS-Grid stuff =================================== */
.product {
  display: grid;
  grid-template-columns: 250px 1fr 1fr;
  column-gap: 45px;
  align-items: center;
}

.product-title {
  grid-column: 1 / -1;
}
.add-to-cart {
  grid-column: 1 /-1;
}

/* -------------------------------------------- */
/* His solution differences: */
/* He deactivated/deleted some other things - I think doesnt 
matter since learning/we throw it away xD*/

/* Also i forgot to remove container class */

/* Rest was pretty much the same - but he added changes in the upper selectors instead of reselecting. */
